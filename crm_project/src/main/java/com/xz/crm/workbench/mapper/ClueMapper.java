package com.xz.crm.workbench.mapper;

import com.xz.crm.workbench.domain.Clue;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

public interface ClueMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Fri Aug 19 15:27:16 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Fri Aug 19 15:27:16 CST 2022
     */
    int insert(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Fri Aug 19 15:27:16 CST 2022
     */
    int insertSelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Fri Aug 19 15:27:16 CST 2022
     */
    Clue selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Fri Aug 19 15:27:16 CST 2022
     */
    int updateByPrimaryKeySelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Fri Aug 19 15:27:16 CST 2022
     */
    int updateByPrimaryKey(Clue record);

    /**
     * 保存一条线索
     * @param clue
     * @return
     */
    int insertClue(Clue clue);

    /**
     * 根据条件分页查询线索列表
     * @param map
     * @return
     */
    List<Clue> selectClueByConditionForPage(Map<String,Object> map);


    /**
     * 根据条件查询线索总记录条数
     * @param map
     * @return
     */
    int selectCountOfClueByCondition(Map<String,Object> map);

    /**
     * 根据id批量删除 线索
     * @param ids
     * @return
     */
    int deleteClueByIds(@Param("ids") String[] ids);

    /**
     * 根据id查询线索
     * @param id
     * @return
     */
    Clue selectClueById(String id);

    /**
     * 更新 线索信息
     * @param clue
     * @return
     */
    int updateClue(Clue clue);

    /**
     * 根据id 查询线索相信信息
     * @param id
     * @return
     */
    Clue selectClueForDetailById(String id);

    /**
     * 根据id 删除线索
     * @param id
     * @return
     */
    int deleteClueById(String id);
}